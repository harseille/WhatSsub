"use strict";(self.webpackChunkwhatssub=self.webpackChunkwhatssub||[]).push([[723],{2723:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "default": () => (/* binding */ Comments_CommentsContainer)\n});\n\n// EXTERNAL MODULE: ./node_modules/@emotion/react/jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js\nvar emotion_react_jsx_runtime_browser_esm = __webpack_require__(5944);\n// EXTERNAL MODULE: ./node_modules/react-router/dist/index.js\nvar dist = __webpack_require__(9250);\n// EXTERNAL MODULE: ./node_modules/recoil/es/index.js\nvar es = __webpack_require__(4480);\n// EXTERNAL MODULE: ./src/state/index.ts + 1 modules\nvar state = __webpack_require__(3915);\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(7294);\n// EXTERNAL MODULE: ./node_modules/@emotion/styled/dist/emotion-styled.browser.esm.js + 2 modules\nvar emotion_styled_browser_esm = __webpack_require__(932);\n// EXTERNAL MODULE: ./src/styles/mixin.ts\nvar mixin = __webpack_require__(4625);\n;// CONCATENATED MODULE: ./src/utils/getTimePassedBy.ts\nvar getTimePassedBy = function getTimePassedBy(createdAt) {\n  var milliSeconds = Date.now() - createdAt;\n  var seconds = milliSeconds / 1000;\n  if (seconds < 60) return "\\uBC29\\uAE08 \\uC804";\n  var minutes = seconds / 60;\n  if (minutes < 60) return "".concat(Math.floor(minutes), "\\uBD84 \\uC804");\n  var hours = minutes / 60;\n  if (hours < 24) return "".concat(Math.floor(hours), "\\uC2DC\\uAC04 \\uC804");\n  var days = hours / 24;\n  if (days < 7) return "".concat(Math.floor(days), "\\uC77C \\uC804");\n  var weeks = days / 7;\n  if (weeks < 5) return "".concat(Math.floor(weeks), "\\uC8FC \\uC804");\n  var months = days / 30;\n  if (months < 12) return "".concat(Math.floor(months), "\\uAC1C\\uC6D4 \\uC804");\n  var years = days / 365;\n  return "".concat(Math.floor(years), "\\uB144 \\uC804");\n};\n/* harmony default export */ const utils_getTimePassedBy = (getTimePassedBy);\n;// CONCATENATED MODULE: ./src/components/Comments/CommentItem.tsx\nvar __makeTemplateObject = undefined && undefined.__makeTemplateObject || function (cooked, raw) {\n  if (Object.defineProperty) {\n    Object.defineProperty(cooked, "raw", {\n      value: raw\n    });\n  } else {\n    cooked.raw = raw;\n  }\n  return cooked;\n};\n\n\n\n\n\nfunction CommentItem(props) {\n  var\n    // comment: { 작성자이름, 내용, 작성일 },\n    // comment: { 작성자이름, 작성자프로필이미지, 내용, 작성일 },\n    _a = props.comment,\n    author = _a.author,\n    authorProfileImg = _a.authorProfileImg,\n    content = _a.content,\n    createdAt = _a.createdAt;\n  return (0,emotion_react_jsx_runtime_browser_esm/* jsxs */.BX)(Wrapper, {\n    children: [(0,emotion_react_jsx_runtime_browser_esm/* jsxs */.BX)(UserInfoWrapper, {\n      children: [(0,emotion_react_jsx_runtime_browser_esm/* jsx */.tZ)(Profile, {\n        children: authorProfileImg && (0,emotion_react_jsx_runtime_browser_esm/* jsx */.tZ)(ProfileImg, {\n          src: authorProfileImg\n        })\n      }), (0,emotion_react_jsx_runtime_browser_esm/* jsx */.tZ)(UserName, {\n        children: author\n      }), (0,emotion_react_jsx_runtime_browser_esm/* jsx */.tZ)(CreatedTime, {\n        children: utils_getTimePassedBy(createdAt)\n      })]\n    }), (0,emotion_react_jsx_runtime_browser_esm/* jsx */.tZ)(Comment, {\n      children: content\n    })]\n  });\n}\n/* harmony default export */ const Comments_CommentItem = ((0,react.memo)(CommentItem));\nvar Wrapper = emotion_styled_browser_esm/* default.div */.Z.div(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\\n  padding-top: 8px;\\n  padding-bottom: 16px;\\n  border-bottom: 1px solid #eee;\\n"], ["\\n  padding-top: 8px;\\n  padding-bottom: 16px;\\n  border-bottom: 1px solid #eee;\\n"])));\nvar UserInfoWrapper = emotion_styled_browser_esm/* default.div */.Z.div(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\\n  margin-bottom: 20px;\\n\\n  &::after {\\n    content: \'\';\\n    display: block;\\n    clear: both;\\n  }\\n"], ["\\n  margin-bottom: 20px;\\n\\n  &::after {\\n    content: \'\';\\n    display: block;\\n    clear: both;\\n  }\\n"])));\nvar Profile = emotion_styled_browser_esm/* default.div */.Z.div(templateObject_3 || (templateObject_3 = __makeTemplateObject(["\\n  float: left;\\n  margin-right: 8px;\\n  background: #ccc;\\n  border-radius: 50%;\\n  width: ", ";\\n  height: ", ";\\n"], ["\\n  float: left;\\n  margin-right: 8px;\\n  background: #ccc;\\n  border-radius: 50%;\\n  width: ", ";\\n  height: ", ";\\n"])), (0,mixin/* changeRem */.bu)(40), (0,mixin/* changeRem */.bu)(40));\nvar ProfileImg = emotion_styled_browser_esm/* default.img */.Z.img(templateObject_4 || (templateObject_4 = __makeTemplateObject(["\\n  border-radius: 50%;\\n  width: ", ";\\n  height: ", ";\\n"], ["\\n  border-radius: 50%;\\n  width: ", ";\\n  height: ", ";\\n"])), (0,mixin/* changeRem */.bu)(40), (0,mixin/* changeRem */.bu)(40));\nvar UserName = emotion_styled_browser_esm/* default.div */.Z.div(templateObject_5 || (templateObject_5 = __makeTemplateObject(["\\n  float: left;\\n  width: ", ";\\n  margin: 2px 0;\\n  font-size: ", ";\\n  font-weight: bold;\\n  line-height: 1.25;\\n"], ["\\n  float: left;\\n  width: ", ";\\n  margin: 2px 0;\\n  font-size: ", ";\\n  font-weight: bold;\\n  line-height: 1.25;\\n"])), "calc(100% - ".concat((0,mixin/* changeRem */.bu)(48), ")"), (0,mixin/* changeRem */.bu)(16));\nvar CreatedTime = emotion_styled_browser_esm/* default.span */.Z.span(templateObject_6 || (templateObject_6 = __makeTemplateObject(["\\n  float: left;\\n  width: ", ";\\n  font-size: ", ";\\n  line-height: 1.25;\\n  color: #979797;\\n"], ["\\n  float: left;\\n  width: ", ";\\n  font-size: ", ";\\n  line-height: 1.25;\\n  color: #979797;\\n"])), "calc(100% - ".concat((0,mixin/* changeRem */.bu)(48), ")"), (0,mixin/* changeRem */.bu)(12));\nvar Comment = emotion_styled_browser_esm/* default.div */.Z.div(templateObject_7 || (templateObject_7 = __makeTemplateObject(["\\n  font-size: ", ";\\n  line-height: 1.25;\\n"], ["\\n  font-size: ", ";\\n  line-height: 1.25;\\n"])), (0,mixin/* changeRem */.bu)(14));\nvar templateObject_1, templateObject_2, templateObject_3, templateObject_4, templateObject_5, templateObject_6, templateObject_7;\n;// CONCATENATED MODULE: ./src/components/Comments/CommentList.tsx\nvar __assign = undefined && undefined.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\n\n\nfunction CommentList(_a) {\n  var commentList = _a.commentList,\n    commentsCount = _a.commentsCount,\n    target = _a.target;\n  var 댓글목록 = commentList.map(function (댓글, 순서) {\n    return (0,emotion_react_jsx_runtime_browser_esm/* jsx */.tZ)("li", __assign({\n      ref: 순서 === commentList.length - 1 ? target : null\n    }, {\n      children: (0,emotion_react_jsx_runtime_browser_esm/* jsx */.tZ)(Comments_CommentItem, {\n        comment: 댓글\n      })\n    }), 댓글.댓글id);\n  });\n  return (0,emotion_react_jsx_runtime_browser_esm/* jsx */.tZ)("ul", {\n    children: 댓글목록\n  });\n}\n/* harmony default export */ const Comments_CommentList = (CommentList);\n// EXTERNAL MODULE: ./src/api/dbPush.ts\nvar dbPush = __webpack_require__(160);\n;// CONCATENATED MODULE: ./src/api/pushNewComment.ts\nvar __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator["throw"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = undefined && undefined.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function sent() {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    "throw": verb(1),\n    "return": verb(2)\n  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError("Generator is already executing.");\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n          case 7:\n            op = _.ops.pop();\n            _.trys.pop();\n            continue;\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n              _.ops.push(op);\n              break;\n            }\n            if (t[2]) _.ops.pop();\n            _.trys.pop();\n            continue;\n        }\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar 새_댓글_추가하기 = function 새_댓글_추가하기(댓글) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a;\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          _b.trys.push([0, 2,, 3]);\n          return [4 /*yield*/, (0,dbPush/* default */.Z)(\'댓글_꿀조합\', {\n            bestCombinationId: 댓글.꿀조합id,\n            authorId: 댓글.작성자id,\n            author: 댓글.작성자이름,\n            authorProfileImg: 댓글.작성자프로필이미지,\n            content: 댓글.내용,\n            createdAt: 댓글.작성일\n          })];\n        case 1:\n          _b.sent();\n          return [3 /*break*/, 3];\n        case 2:\n          _a = _b.sent();\n          console.log(\'댓글쓰기 실패\');\n          return [3 /*break*/, 3];\n        case 3:\n          return [2 /*return*/];\n      }\n    });\n  });\n};\n\n/* harmony default export */ const pushNewComment = (새_댓글_추가하기);\n// EXTERNAL MODULE: ./src/styles/media-queries.ts\nvar media_queries = __webpack_require__(3519);\n// EXTERNAL MODULE: ./src/styles/theme.ts\nvar theme = __webpack_require__(994);\n;// CONCATENATED MODULE: ./src/components/Comments/CommentInputWrap.tsx\nvar CommentInputWrap_makeTemplateObject = undefined && undefined.__makeTemplateObject || function (cooked, raw) {\n  if (Object.defineProperty) {\n    Object.defineProperty(cooked, "raw", {\n      value: raw\n    });\n  } else {\n    cooked.raw = raw;\n  }\n  return cooked;\n};\nvar CommentInputWrap_assign = undefined && undefined.__assign || function () {\n  CommentInputWrap_assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n    return t;\n  };\n  return CommentInputWrap_assign.apply(this, arguments);\n};\nvar CommentInputWrap_awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator["throw"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar CommentInputWrap_generator = undefined && undefined.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function sent() {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    "throw": verb(1),\n    "return": verb(2)\n  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError("Generator is already executing.");\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n          case 7:\n            op = _.ops.pop();\n            _.trys.pop();\n            continue;\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n              _.ops.push(op);\n              break;\n            }\n            if (t[2]) _.ops.pop();\n            _.trys.pop();\n            continue;\n        }\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\n\n\n\n\n\n\n\n\n\nfunction CommentInputWrap(_a) {\n  var _this = this;\n  var getCommentListCount = _a.getCommentListCount;\n  var commentInputRef = (0,react.useRef)(null);\n  var combinationId = (0,dist/* useParams */.UO)().combinationId;\n  var 유저정보 = (0,es/* useRecoilValue */.sJ)(state/* userState */.K);\n  var 서브밋핸들러_댓글_쓰기 = function 서브밋핸들러_댓글_쓰기(e) {\n    return CommentInputWrap_awaiter(_this, void 0, void 0, function () {\n      var 댓글내용, 댓글_정보, error_1;\n      var _a, _b;\n      return CommentInputWrap_generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            e.preventDefault();\n            댓글내용 = (_a = commentInputRef.current) === null || _a === void 0 ? void 0 : _a.value;\n            if (!!유저정보) return [3 /*break*/, 1];\n            alert(\'로그인 후 댓글을 작성할 수 있습니다.\');\n            return [3 /*break*/, 7];\n          case 1:\n            if (!!댓글내용) return [3 /*break*/, 2];\n            alert(\'댓글을 입력해주세요.\');\n            return [3 /*break*/, 7];\n          case 2:\n            if (!(유저정보 && 댓글내용 && combinationId)) return [3 /*break*/, 7];\n            댓글_정보 = {\n              꿀조합id: combinationId,\n              작성자id: 유저정보.uid,\n              작성자이름: 유저정보.displayName,\n              작성자프로필이미지: 유저정보.photoURL,\n              내용: (_b = commentInputRef.current) === null || _b === void 0 ? void 0 : _b.value,\n              작성일: Date.now()\n            };\n            _c.label = 3;\n          case 3:\n            _c.trys.push([3, 6,, 7]);\n            return [4 /*yield*/, pushNewComment(댓글_정보)];\n          case 4:\n            _c.sent();\n            return [4 /*yield*/, getCommentListCount(combinationId)];\n          case 5:\n            _c.sent();\n            commentInputRef.current.value = \'\';\n            return [3 /*break*/, 7];\n          case 6:\n            error_1 = _c.sent();\n            console.error(error_1);\n            return [3 /*break*/, 7];\n          case 7:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  return (0,emotion_react_jsx_runtime_browser_esm/* jsxs */.BX)(CommentInputWrap_Wrapper, {\n    children: [(0,emotion_react_jsx_runtime_browser_esm/* jsx */.tZ)(CommentInputWrap_Profile, {\n      children: 유저정보 && (0,emotion_react_jsx_runtime_browser_esm/* jsx */.tZ)(CommentInputWrap_ProfileImg, {\n        src: 유저정보.photoURL,\n        alt: 유저정보.displayName\n      })\n    }), (0,emotion_react_jsx_runtime_browser_esm/* jsxs */.BX)(Form, CommentInputWrap_assign({\n      onSubmit: 서브밋핸들러_댓글_쓰기\n    }, {\n      children: [(0,emotion_react_jsx_runtime_browser_esm/* jsx */.tZ)(Input, {\n        id: "comment",\n        maxLength: 120,\n        ref: commentInputRef\n      }), (0,emotion_react_jsx_runtime_browser_esm/* jsx */.tZ)(Submit, {\n        type: "submit",\n        value: "\\uAC8C\\uC2DC"\n      })]\n    }))]\n  });\n}\n/* harmony default export */ const Comments_CommentInputWrap = ((0,react.memo)(CommentInputWrap));\nvar CommentInputWrap_Wrapper = emotion_styled_browser_esm/* default.div */.Z.div(CommentInputWrap_templateObject_1 || (CommentInputWrap_templateObject_1 = CommentInputWrap_makeTemplateObject(["\\n  width: 100%;\\n  padding: 20px;\\n  margin-bottom: 16px;\\n  background: #ffffff;\\n  display: flex;\\n  align-items: center;\\n  /* box-shadow: 0px -4px 10px rgba(213, 213, 213, 0.25), 0px 4px 10px rgba(213, 213, 213, 0.25);*/\\n  border-bottom: 1px solid ", ";\\n\\n  ", " {\\n    justify-content: center;\\n    height: ", ";\\n  }\\n"], ["\\n  width: 100%;\\n  padding: 20px;\\n  margin-bottom: 16px;\\n  background: #ffffff;\\n  display: flex;\\n  align-items: center;\\n  /* box-shadow: 0px -4px 10px rgba(213, 213, 213, 0.25), 0px 4px 10px rgba(213, 213, 213, 0.25);*/\\n  border-bottom: 1px solid ", ";\\n\\n  ", " {\\n    justify-content: center;\\n    height: ", ";\\n  }\\n"])), theme/* default.colors.grayDDD */.Z.colors.grayDDD, media_queries/* default */.Z, (0,mixin/* changeRem */.bu)(80));\nvar CommentInputWrap_Profile = emotion_styled_browser_esm/* default.div */.Z.div(CommentInputWrap_templateObject_2 || (CommentInputWrap_templateObject_2 = CommentInputWrap_makeTemplateObject(["\\n  display: none;\\n  width: ", ";\\n  height: ", ";\\n  border-radius: 50%;\\n  background: #ccc;\\n\\n  ", " {\\n    display: block;\\n    width: ", ";\\n    height: ", ";\\n  }\\n"], ["\\n  display: none;\\n  width: ", ";\\n  height: ", ";\\n  border-radius: 50%;\\n  background: #ccc;\\n\\n  ", " {\\n    display: block;\\n    width: ", ";\\n    height: ", ";\\n  }\\n"])), (0,mixin/* changeRem */.bu)(30), (0,mixin/* changeRem */.bu)(30), media_queries/* default */.Z, (0,mixin/* changeRem */.bu)(48), (0,mixin/* changeRem */.bu)(48));\nvar CommentInputWrap_ProfileImg = emotion_styled_browser_esm/* default.img */.Z.img(CommentInputWrap_templateObject_3 || (CommentInputWrap_templateObject_3 = CommentInputWrap_makeTemplateObject(["\\n  border-radius: 50%;\\n  background: #ccc;\\n"], ["\\n  border-radius: 50%;\\n  background: #ccc;\\n"])));\nvar Form = emotion_styled_browser_esm/* default.form */.Z.form(CommentInputWrap_templateObject_4 || (CommentInputWrap_templateObject_4 = CommentInputWrap_makeTemplateObject(["\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-evenly;\\n  gap: 10px;\\n  width: 100%;\\n  ", " {\\n    max-width: ", ";\\n  }\\n"], ["\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-evenly;\\n  gap: 10px;\\n  width: 100%;\\n  ", " {\\n    max-width: ", ";\\n  }\\n"])), media_queries/* default */.Z, (0,mixin/* changeRem */.bu)(1200));\nvar Input = emotion_styled_browser_esm/* default.input */.Z.input(CommentInputWrap_templateObject_5 || (CommentInputWrap_templateObject_5 = CommentInputWrap_makeTemplateObject(["\\n  flex-shrink: 0;\\n  flex-basis: 100%;\\n  border: 0;\\n  padding: 13px;\\n  border-radius: 6px;\\n  background: #f5f5f5;\\n  font-size: ", ";\\n\\n  ", " {\\n    flex-basis: ", ";\\n  }\\n"], ["\\n  flex-shrink: 0;\\n  flex-basis: 100%;\\n  border: 0;\\n  padding: 13px;\\n  border-radius: 6px;\\n  background: #f5f5f5;\\n  font-size: ", ";\\n\\n  ", " {\\n    flex-basis: ", ";\\n  }\\n"])), (0,mixin/* changeRem */.bu)(14), media_queries/* default */.Z, "calc(100% - ".concat((0,mixin/* changeRem */.bu)(80), ")"));\nvar Submit = emotion_styled_browser_esm/* default.input */.Z.input(CommentInputWrap_templateObject_6 || (CommentInputWrap_templateObject_6 = CommentInputWrap_makeTemplateObject(["\\n  border: 0;\\n  flex-basis: ", ";\\n  flex-shrink: 0;\\n  background: transparent;\\n  color: ", ";\\n  font-size: ", ";\\n  font-weight: bold;\\n"], ["\\n  border: 0;\\n  flex-basis: ", ";\\n  flex-shrink: 0;\\n  background: transparent;\\n  color: ", ";\\n  font-size: ", ";\\n  font-weight: bold;\\n"])), (0,mixin/* changeRem */.bu)(40), function (props) {\n  return props.theme.colors.primaryBlue;\n}, (0,mixin/* changeRem */.bu)(14));\nvar CommentInputWrap_templateObject_1, CommentInputWrap_templateObject_2, CommentInputWrap_templateObject_3, CommentInputWrap_templateObject_4, CommentInputWrap_templateObject_5, CommentInputWrap_templateObject_6;\n// EXTERNAL MODULE: ./node_modules/firebase/firestore/dist/index.esm.js + 2 modules\nvar index_esm = __webpack_require__(1591);\n// EXTERNAL MODULE: ./src/api/dbGet.ts\nvar dbGet = __webpack_require__(6247);\n// EXTERNAL MODULE: ./src/hooks/useInfiniteScroll.ts\nvar useInfiniteScroll = __webpack_require__(7547);\n// EXTERNAL MODULE: ./src/firebase.config.ts\nvar firebase_config = __webpack_require__(1706);\n;// CONCATENATED MODULE: ./src/hooks/useComments.ts\nvar useComments_assign = undefined && undefined.__assign || function () {\n  useComments_assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n    return t;\n  };\n  return useComments_assign.apply(this, arguments);\n};\nvar useComments_awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator["throw"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar useComments_generator = undefined && undefined.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function sent() {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    "throw": verb(1),\n    "return": verb(2)\n  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError("Generator is already executing.");\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n          case 7:\n            op = _.ops.pop();\n            _.trys.pop();\n            continue;\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n              _.ops.push(op);\n              break;\n            }\n            if (t[2]) _.ops.pop();\n            _.trys.pop();\n            continue;\n        }\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __read = undefined && undefined.__read || function (o, n) {\n  var m = typeof Symbol === "function" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {\n      ar.push(r.value);\n    }\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i["return"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nvar __spreadArray = undefined && undefined.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\n\n\n\n\n\nvar useComments = function useComments(꿀조합id) {\n  var _a = __read((0,react.useState)(0), 2),\n    commentsCount = _a[0],\n    setCommentsCount = _a[1];\n  var _b = __read((0,react.useState)([]), 2),\n    comments = _b[0],\n    setComments = _b[1];\n  var lastDocument = (0,react.useRef)(null);\n  var 댓글_콜랙션 = (0,index_esm/* collection */.hJ)(firebase_config.db, \'댓글_꿀조합\');\n  var 한번에_가져올_댓글_수 = 5;\n  var 댓글_쿼리 = {\n    댓글_수_가져오기: (0,index_esm/* query */.IO)(댓글_콜랙션, (0,index_esm/* where */.ar)(\'bestCombinationId\', \'==\', 꿀조합id)),\n    최신_댓글_가져오기: (0,index_esm/* query */.IO)(댓글_콜랙션, (0,index_esm/* where */.ar)(\'bestCombinationId\', \'==\', 꿀조합id), (0,index_esm/* orderBy */.Xo)(\'createdAt\', \'desc\'), (0,index_esm/* limit */.b9)(1)),\n    초기_댓글_목록_가져오기: (0,index_esm/* query */.IO)(댓글_콜랙션, (0,index_esm/* where */.ar)(\'bestCombinationId\', \'==\', 꿀조합id), (0,index_esm/* orderBy */.Xo)(\'createdAt\', \'desc\'), (0,index_esm/* limit */.b9)(한번에_가져올_댓글_수)),\n    스크롤_댓글_목록_가져오기: (0,index_esm/* query */.IO)(댓글_콜랙션, (0,index_esm/* where */.ar)(\'bestCombinationId\', \'==\', 꿀조합id), (0,index_esm/* orderBy */.Xo)(\'createdAt\', \'desc\'), (0,index_esm/* startAfter */.TQ)(lastDocument.current), (0,index_esm/* limit */.b9)(한번에_가져올_댓글_수))\n  };\n  var 댓글_수_가져오기 = function 댓글_수_가져오기(꿀조합id) {\n    return useComments_awaiter(void 0, void 0, void 0, function () {\n      var querySnapshot, error_1;\n      return useComments_generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 2,, 3]);\n            return [4 /*yield*/, (0,index_esm/* getCountFromServer */.Yp)(댓글_쿼리.댓글_수_가져오기)];\n          case 1:\n            querySnapshot = _a.sent();\n            setCommentsCount(querySnapshot.data().count);\n            return [3 /*break*/, 3];\n          case 2:\n            error_1 = _a.sent();\n            console.error(error_1);\n            console.log(\'댓글 수 가져오기 실패\');\n            return [3 /*break*/, 3];\n          case 3:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  var 댓글_목록_가져오기 = function 댓글_목록_가져오기(꿀조합id) {\n    return useComments_awaiter(void 0, void 0, void 0, function () {\n      var 쿼리스냅샷, _a, 댓글_목록_1, error_2;\n      var _b;\n      return useComments_generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            _c.trys.push([0, 5,, 6]);\n            if (!!lastDocument.current) return [3 /*break*/, 2];\n            return [4 /*yield*/, (0,dbGet/* default */.Z)(댓글_쿼리.초기_댓글_목록_가져오기)];\n          case 1:\n            _a = _c.sent();\n            return [3 /*break*/, 4];\n          case 2:\n            return [4 /*yield*/, (0,dbGet/* default */.Z)(댓글_쿼리.스크롤_댓글_목록_가져오기)];\n          case 3:\n            _a = _c.sent();\n            _c.label = 4;\n          case 4:\n            쿼리스냅샷 = _a;\n            댓글_목록_1 = [];\n            쿼리스냅샷.forEach(function (document) {\n              댓글_목록_1.push(useComments_assign({\n                댓글id: document.id\n              }, JSON.parse(JSON.stringify(document.data()))));\n            });\n            lastDocument.current = (_b = 쿼리스냅샷.docs[쿼리스냅샷.docs.length - 1]) !== null && _b !== void 0 ? _b : null;\n            setComments(function (prev) {\n              return __spreadArray(__spreadArray([], __read(prev), false), __read(댓글_목록_1), false);\n            });\n            return [3 /*break*/, 6];\n          case 5:\n            error_2 = _c.sent();\n            // 모달이나 alert창으로\n            console.error(error_2);\n            console.log(\'댓글읽기 실패\');\n            return [3 /*break*/, 6];\n          case 6:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  var listRef = (0,useInfiniteScroll/* default */.Z)(댓글_목록_가져오기.bind(null, 꿀조합id), comments.length, 댓글_쿼리.댓글_수_가져오기).listRef;\n  var 댓글_목록_변화감지 = function 댓글_목록_변화감지(꿀조합id) {\n    return useComments_awaiter(void 0, void 0, void 0, function () {\n      var error_3;\n      return useComments_generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 2,, 3]);\n            return [4 /*yield*/, (0,index_esm/* onSnapshot */.cf)(댓글_쿼리.최신_댓글_가져오기, function (querySnapshot) {\n              if (!querySnapshot.empty) {\n                var 댓글_목록_2 = querySnapshot.docs.map(function (doc) {\n                  return useComments_assign({\n                    댓글id: doc.id\n                  }, JSON.parse(JSON.stringify(doc.data())));\n                });\n                댓글_수_가져오기(꿀조합id);\n                lastDocument.current = querySnapshot.docs[querySnapshot.docs.length - 1];\n                setComments(function (prev) {\n                  if (prev.length === 0) {\n                    return 댓글_목록_2;\n                  }\n                  return __spreadArray(__spreadArray([], __read(댓글_목록_2), false), __read(prev), false);\n                });\n              }\n            })];\n          case 1:\n            _a.sent();\n            return [3 /*break*/, 3];\n          case 2:\n            error_3 = _a.sent();\n            console.error(error_3);\n            console.log(\'댓글읽기 실패\');\n            return [3 /*break*/, 3];\n          case 3:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  (0,react.useEffect)(function () {\n    if (!꿀조합id) return;\n    댓글_수_가져오기(꿀조합id);\n    댓글_목록_변화감지(꿀조합id);\n  }, [꿀조합id]);\n  return {\n    comments: comments,\n    commentsCount: commentsCount,\n    listRef: listRef,\n    댓글_수_가져오기: 댓글_수_가져오기\n  };\n};\n/* harmony default export */ const hooks_useComments = (useComments);\n;// CONCATENATED MODULE: ./src/components/Comments/CommentsContainer.tsx\nvar CommentsContainer_makeTemplateObject = undefined && undefined.__makeTemplateObject || function (cooked, raw) {\n  if (Object.defineProperty) {\n    Object.defineProperty(cooked, "raw", {\n      value: raw\n    });\n  } else {\n    cooked.raw = raw;\n  }\n  return cooked;\n};\n\n\n\n\n\n\n\n\n\n\nfunction CommentsContainer() {\n  var combinationId = (0,dist/* useParams */.UO)().combinationId;\n  var _a = hooks_useComments(combinationId),\n    comments = _a.comments,\n    commentsCount = _a.commentsCount,\n    listRef = _a.listRef,\n    댓글_수_가져오기 = _a.댓글_수_가져오기;\n  var isLoggedIn = (0,es/* useRecoilValue */.sJ)(state/* isLoggedInState */.n);\n  return (0,emotion_react_jsx_runtime_browser_esm/* jsxs */.BX)(Comments, {\n    children: [(0,emotion_react_jsx_runtime_browser_esm/* jsx */.tZ)(CommentHeader, {\n      children: (0,emotion_react_jsx_runtime_browser_esm/* jsxs */.BX)("h2", {\n        children: ["\\uB9AC\\uBDF0 ", (0,emotion_react_jsx_runtime_browser_esm/* jsx */.tZ)("span", {\n          children: commentsCount\n        })]\n      })\n    }), isLoggedIn && (0,emotion_react_jsx_runtime_browser_esm/* jsx */.tZ)(Comments_CommentInputWrap, {\n      getCommentListCount: 댓글_수_가져오기\n    }), comments.length !== 0 && (0,emotion_react_jsx_runtime_browser_esm/* jsx */.tZ)(Comments_CommentList, {\n      commentList: comments,\n      commentsCount: commentsCount,\n      target: listRef\n    })]\n  });\n}\n/* harmony default export */ const Comments_CommentsContainer = (CommentsContainer);\nvar Comments = emotion_styled_browser_esm/* default.div */.Z.div(CommentsContainer_templateObject_1 || (CommentsContainer_templateObject_1 = CommentsContainer_makeTemplateObject(["\\n  background: #fff;\\n  padding: 0 32px;\\n  padding-bottom: ", ";\\n  box-shadow: 0px -4px 10px rgba(213, 213, 213, 0.25);\\n\\n  ", " {\\n    padding-bottom: ", ";\\n  }\\n"], ["\\n  background: #fff;\\n  padding: 0 32px;\\n  padding-bottom: ", ";\\n  box-shadow: 0px -4px 10px rgba(213, 213, 213, 0.25);\\n\\n  ", " {\\n    padding-bottom: ", ";\\n  }\\n"])), (0,mixin/* changeRem */.bu)(60), media_queries/* default */.Z, (0,mixin/* changeRem */.bu)(80));\nvar CommentHeader = emotion_styled_browser_esm/* default.div */.Z.div(CommentsContainer_templateObject_2 || (CommentsContainer_templateObject_2 = CommentsContainer_makeTemplateObject(["\\n  ", "\\n  height: ", ";\\n\\n  box-shadow: 0px 1px 1px #eee;\\n\\n  & h2 {\\n    font-weight: 500;\\n    font-size: ", ";\\n\\n    & span {\\n      color: ", ";\\n    }\\n  }\\n"], ["\\n  ", "\\n  height: ", ";\\n\\n  box-shadow: 0px 1px 1px #eee;\\n\\n  & h2 {\\n    font-weight: 500;\\n    font-size: ", ";\\n\\n    & span {\\n      color: ", ";\\n    }\\n  }\\n"])), (0,mixin/* flexbox */.GQ)(\'row\', undefined, \'center\'), (0,mixin/* changeRem */.bu)(60), (0,mixin/* changeRem */.bu)(14), function (props) {\n  return props.theme.colors.primaryYellow;\n});\nvar CommentsContainer_templateObject_1, CommentsContainer_templateObject_2;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///2723\n')}}]);