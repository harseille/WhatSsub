{"version":3,"names":["collect","value","previousValue","values","split","push","commander","option","usage","parse","process","argv","console","log","buildExternalHelpers","whitelist","outputType"],"sources":["../src/babel-external-helpers.ts"],"sourcesContent":["import commander from \"commander\";\nimport { buildExternalHelpers } from \"@babel/core\";\n\nfunction collect(\n  value: string | any,\n  previousValue: Array<string>,\n): Array<string> {\n  // If the user passed the option with no value, like \"babel-external-helpers --whitelist\", do nothing.\n  if (typeof value !== \"string\") return previousValue;\n\n  const values = value.split(\",\");\n\n  if (previousValue) {\n    previousValue.push(...values);\n    return previousValue;\n  }\n  return values;\n}\n\ncommander.option(\n  \"-l, --whitelist [whitelist]\",\n  \"Whitelist of helpers to ONLY include\",\n  collect,\n);\ncommander.option(\n  \"-t, --output-type [type]\",\n  \"Type of output (global|umd|var)\",\n  \"global\",\n);\n\ncommander.usage(\"[options]\");\ncommander.parse(process.argv);\n\nconsole.log(buildExternalHelpers(commander.whitelist, commander.outputType));\n"],"mappings":";;AAAA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AACA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AAEA,SAASA,OAAT,CACEC,KADF,EAEEC,aAFF,EAGiB;EAEf,IAAI,OAAOD,KAAP,KAAiB,QAArB,EAA+B,OAAOC,aAAP;EAE/B,MAAMC,MAAM,GAAGF,KAAK,CAACG,KAAN,CAAY,GAAZ,CAAf;;EAEA,IAAIF,aAAJ,EAAmB;IACjBA,aAAa,CAACG,IAAd,CAAmB,GAAGF,MAAtB;IACA,OAAOD,aAAP;EACD;;EACD,OAAOC,MAAP;AACD;;AAEDG,YAAA,CAAUC,MAAV,CACE,6BADF,EAEE,sCAFF,EAGEP,OAHF;;AAKAM,YAAA,CAAUC,MAAV,CACE,0BADF,EAEE,iCAFF,EAGE,QAHF;;AAMAD,YAAA,CAAUE,KAAV,CAAgB,WAAhB;;AACAF,YAAA,CAAUG,KAAV,CAAgBC,OAAO,CAACC,IAAxB;;AAEAC,OAAO,CAACC,GAAR,CAAY,IAAAC,4BAAA,EAAqBR,YAAA,CAAUS,SAA/B,EAA0CT,YAAA,CAAUU,UAApD,CAAZ"}