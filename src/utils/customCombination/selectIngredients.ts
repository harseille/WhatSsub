import { 인터페이스_꿀조합, 인터페이스_선택된_재료 } from '../../types/ISandwich';

type TProps = {
  나만의_조합: 인터페이스_꿀조합;
  체인지핸들러_나만의_조합_수정: (선택한재료: 인터페이스_꿀조합) => void;
  재료정보: 인터페이스_선택된_재료;
};

const selectIngredients = (props: TProps) => {
  const { 재료정보, 나만의_조합, 체인지핸들러_나만의_조합_수정: 나만의_조합_수정 } = props;

  if (재료정보.카테고리 === '샌드위치') {
    나만의_조합_수정({ ...나만의_조합, 베이스샌드위치: 재료정보.이름 });
  } else if (재료정보.카테고리 === '토스팅') {
    return 나만의_조합_수정({ ...나만의_조합, 토스팅: 재료정보.이름 });
  } else if (재료정보.카테고리 === '추가재료') {
    if (나만의_조합.선택재료.find(선택재료 => 선택재료.이름 === 재료정보.이름 && 선택재료.추가재료여부)) {
      const 새로운_선택재료 = 나만의_조합.선택재료.filter(
        선택재료 => 선택재료.이름 !== 재료정보.이름 || (선택재료.이름 === 재료정보.이름 && !선택재료.추가재료여부)
      );
      나만의_조합_수정({ ...나만의_조합, 선택재료: 새로운_선택재료 });
    } else {
      나만의_조합_수정({
        ...나만의_조합,
        선택재료: [...나만의_조합.선택재료, { ...재료정보, 추가재료여부: true }],
      });
    }
  } else {
    const isLimited = 재료정보.카테고리 === '빵' || 재료정보.카테고리 === '치즈';
    if (isLimited) {
      const 새로운_선택재료 = 나만의_조합.선택재료.filter(선택재료 => 선택재료.카테고리 !== 재료정보.카테고리);
      나만의_조합_수정({
        ...나만의_조합,
        선택재료: [...새로운_선택재료, { ...재료정보, 추가재료여부: false }],
      });
    } else if (나만의_조합.선택재료.find(선택재료 => 선택재료.이름 === 재료정보.이름 && !선택재료.추가재료여부)) {
      const 새로운_선택재료 = 나만의_조합.선택재료.filter(
        선택재료 => 선택재료.이름 !== 재료정보.이름 || (선택재료.이름 === 재료정보.이름 && 선택재료.추가재료여부)
      );
      나만의_조합_수정({ ...나만의_조합, 선택재료: 새로운_선택재료 });
    } else {
      if (
        재료정보.카테고리 === '소스' &&
        나만의_조합.선택재료.filter(선택재료 => 선택재료.카테고리 === 재료정보.카테고리).length >= 3
      ) {
        return alert('3개 이상 선택할 수 없습니다.');
      }

      나만의_조합_수정({
        ...나만의_조합,
        선택재료: [...나만의_조합.선택재료, { ...재료정보, 추가재료여부: false }],
      });
    }
  }
};

export default selectIngredients;
